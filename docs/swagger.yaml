definitions:
  app.Response:
    properties:
      code:
        description: 代码
        example: 200
        type: integer
      data:
        description: 数据集
        type: object
      msg:
        description: 消息
        type: string
    type: object
  models.Dept:
    properties:
      children:
        items:
          $ref: '#/definitions/models.Dept'
        type: array
      createBy:
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      deptId:
        description: 部门编码
        type: integer
      deptName:
        description: 部门名称
        type: string
      deptPath:
        type: string
      email:
        description: 邮箱
        type: string
      leader:
        description: 负责人
        type: string
      params:
        type: string
      parentId:
        description: 上级部门
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: string
      updateBy:
        type: string
      updatedAt:
        type: string
    type: object
  models.DictType:
    properties:
      createBy:
        description: 创建者
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      dictId:
        type: integer
      dictName:
        description: 字典名称
        type: string
      dictType:
        description: 字典类型
        type: string
      params:
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 状态
        type: string
      updateBy:
        description: 更新者
        type: string
      updatedAt:
        type: string
    type: object
  models.Login:
    properties:
      code:
        type: string
      password:
        type: string
      username:
        type: string
      uuid:
        type: string
    required:
    - code
    - password
    - username
    - uuid
    type: object
  models.LoginLog:
    properties:
      browser:
        description: 浏览器
        type: string
      createBy:
        description: 创建人
        type: string
      createdAt:
        type: string
      dataScope:
        description: 数据
        type: string
      deletedAt:
        type: string
      infoId:
        description: 主键
        type: integer
      ipaddr:
        description: ip地址
        type: string
      loginLocation:
        description: 归属地
        type: string
      loginTime:
        description: 登录时间
        type: string
      msg:
        type: string
      os:
        description: 系统
        type: string
      params:
        type: string
      platform:
        description: 固件
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 状态
        type: string
      updateBy:
        description: 更新者
        type: string
      updatedAt:
        type: string
      username:
        description: 用户名
        type: string
    type: object
  models.Menu:
    properties:
      action:
        type: string
      breadcrumb:
        type: string
      children:
        items:
          $ref: '#/definitions/models.Menu'
        type: array
      component:
        type: string
      createBy:
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      icon:
        type: string
      is_select:
        type: boolean
      isFrame:
        type: string
      menuId:
        type: integer
      menuName:
        type: string
      menuType:
        type: string
      noCache:
        type: boolean
      params:
        type: string
      parentId:
        type: integer
      path:
        type: string
      paths:
        type: string
      permission:
        type: string
      roleId:
        type: integer
      sort:
        type: integer
      title:
        type: string
      updateBy:
        type: string
      updatedAt:
        type: string
      visible:
        type: string
    type: object
  models.Post:
    properties:
      createBy:
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      params:
        type: string
      postCode:
        description: 岗位代码
        type: string
      postId:
        description: 岗位编号
        type: integer
      postName:
        description: 岗位名称
        type: string
      remark:
        description: 描述
        type: string
      sort:
        description: 岗位排序
        type: integer
      status:
        description: 状态
        type: string
      updateBy:
        type: string
      updatedAt:
        type: string
    type: object
  models.SysConfig:
    properties:
      configId:
        description: 编码
        type: integer
      configKey:
        description: 参数键名
        type: string
      configName:
        description: 参数名称
        type: string
      configType:
        description: 是否系统内置
        type: string
      configValue:
        description: 参数键值
        type: string
      createBy:
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      params:
        type: string
      remark:
        description: 备注
        type: string
      updateBy:
        type: string
      updatedAt:
        type: string
    type: object
  models.SysOperLog:
    properties:
      businessType:
        description: 操作类型
        type: string
      businessTypes:
        type: string
      createBy:
        description: 创建人
        type: string
      createdAt:
        type: string
      dataScope:
        description: 数据
        type: string
      deletedAt:
        type: string
      deptName:
        description: 部门名称
        type: string
      jsonResult:
        description: 返回数据
        type: string
      latencyime:
        description: 耗时
        type: string
      method:
        description: 函数
        type: string
      operId:
        description: 日志编码
        type: integer
      operIp:
        description: 客户端ip
        type: string
      operLocation:
        description: 访问位置
        type: string
      operName:
        description: 操作者
        type: string
      operParam:
        description: 请求参数
        type: string
      operTime:
        description: 操作时间
        type: string
      operUrl:
        description: 访问地址
        type: string
      operatorType:
        description: 操作类型
        type: string
      params:
        description: 参数
        type: string
      remark:
        description: 备注
        type: string
      requestMethod:
        description: 请求方式
        type: string
      status:
        description: 操作状态
        type: string
      title:
        description: 操作模块
        type: string
      updateBy:
        description: 更新者
        type: string
      updatedAt:
        type: string
      userAgent:
        description: ua
        type: string
    type: object
  models.SysRole:
    properties:
      admin:
        type: boolean
      createBy:
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      flag:
        type: string
      menuIds:
        items:
          type: integer
        type: array
      params:
        type: string
      remark:
        description: 备注
        type: string
      roleId:
        description: 角色编码
        type: integer
      roleKey:
        description: 角色代码
        type: string
      roleName:
        description: 角色名称
        type: string
      roleSort:
        description: 角色排序
        type: integer
      status:
        type: string
      updateBy:
        type: string
      updatedAt:
        type: string
    type: object
  models.SysUser:
    properties:
      avatar:
        description: 头像
        type: string
      createBy:
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      deptId:
        description: 部门编码
        type: integer
      email:
        description: 邮箱
        type: string
      nickName:
        description: 昵称
        type: string
      params:
        type: string
      password:
        description: 密码
        type: string
      phone:
        description: 手机号
        type: string
      postId:
        description: 职位编码
        type: integer
      remark:
        description: 备注
        type: string
      roleId:
        description: 角色编码
        type: integer
      salt:
        description: 盐
        type: string
      sex:
        description: 性别
        type: string
      status:
        type: string
      updateBy:
        type: string
      updatedAt:
        type: string
      userId:
        description: 编码
        type: integer
      username:
        type: string
    type: object
info:
  contact: {}
  description: |-
    The interface documentation of the front and back end separate permission management system based on Gin + Vue + Element UI
    Add qq group: 74520518 Enter the technical exchange group Please note, thank you!
  license:
    name: MIT
    url: https://github.com/wenjianzhang/go-admin/blob/master/LICENSE.md
  title: go-admin API
  version: 0.0.1
paths:
  /api/v1/config:
    put:
      consumes:
      - application/json
      description: get JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysConfig'
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: modify configuration
      tags:
      - configuration
  /api/v1/config/{configId}:
    delete:
      description: delete data
      parameters:
      - description: configId
        in: path
        name: configId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "Deletion failed"}'
          schema:
            type: string
      summary: delete configuration
      tags:
      - configuration
    get:
      description: get JSON
      parameters:
      - description: configuration encoding
        in: path
        name: configId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: get configuration
      tags:
      - configuration
  /api/v1/configKey/{configKey}:
    get:
      description: get JSON
      parameters:
      - description: configKey
        in: path
        name: configKey
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: get configuration
      tags:
      - configuration
  /api/v1/configList:
    get:
      description: get JSON
      parameters:
      - description: configKey
        in: query
        name: configKey
        type: string
      - description: configName
        in: query
        name: configName
        type: string
      - description: configType
        in: query
        name: configType
        type: string
      - description: Number of pages
        in: query
        name: pageSize
        type: integer
      - description: page number
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: configuration list data
      tags:
      - configuration
  /api/v1/db/columns/page:
    get:
      description: database table column page list / database table column page list
      parameters:
      - description: tableName / data table name
        in: query
        name: tableName
        type: string
      - description: pageSize / number of pages
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / page number
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      summary: page list data / page list data
      tags:
      - tools / Tools
  /api/v1/db/tables/page:
    get:
      description: database table page list / database table page list
      parameters:
      - description: tableName / data table name
        in: query
        name: tableName
        type: string
      - description: pageSize / number of pages
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / page number
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      summary: page list data / page list data
      tags:
      - tools / Tools
  /api/v1/dept:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Dept'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加部门
      tags:
      - 部门
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Dept'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改部门
      tags:
      - 部门
  /api/v1/dept/{deptId}:
    get:
      description: 获取JSON
      parameters:
      - description: deptId
        in: path
        name: deptId
        type: string
      - description: position
        in: query
        name: position
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: 部门列表数据
      tags:
      - 部门
  /api/v1/dept/{id}:
    delete:
      description: 删除数据
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除部门
      tags:
      - 部门
  /api/v1/deptList:
    get:
      description: 分页列表
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: id
        in: query
        name: id
        type: string
      - description: position
        in: query
        name: position
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: 分页部门列表数据
      tags:
      - 部门
  /api/v1/dict/data:
    post:
      consumes:
      - application/json
      description: get JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysConfig'
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: add configuration
      tags:
      - configuration
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.DictType'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改字典数据
      tags:
      - 字典数据
  /api/v1/dict/data/{dictCode}:
    delete:
      description: 删除数据
      parameters:
      - description: dictCode
        in: path
        name: dictCode
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除字典数据
      tags:
      - 字典数据
    get:
      description: 获取JSON
      parameters:
      - description: 字典编码
        in: path
        name: dictCode
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: 通过编码获取字典数据
      tags:
      - 字典数据
  /api/v1/dict/data/list:
    get:
      description: 获取JSON
      parameters:
      - description: status
        in: query
        name: status
        type: string
      - description: dictCode
        in: query
        name: dictCode
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: 字典数据列表
      tags:
      - 字典数据
  /api/v1/dict/databyType/{dictType}:
    get:
      description: 获取JSON
      parameters:
      - description: dictType
        in: path
        name: dictType
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: 通过字典类型获取字典数据
      tags:
      - 字典数据
  /api/v1/dict/type:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.DictType'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加字典类型
      tags:
      - 字典类型
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.DictType'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改字典类型
      tags:
      - 字典类型
  /api/v1/dict/type/{dictId}:
    delete:
      description: 删除数据
      parameters:
      - description: dictId
        in: path
        name: dictId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除字典类型
      tags:
      - 字典类型
    get:
      description: 获取JSON
      parameters:
      - description: 字典类型编码
        in: path
        name: dictId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: 通过字典id获取字典类型
      tags:
      - 字典类型
  /api/v1/dict/type/list:
    get:
      description: 获取JSON
      parameters:
      - description: dictName
        in: query
        name: dictName
        type: string
      - description: dictId
        in: query
        name: dictId
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: 字典类型列表数据
      tags:
      - 字典类型
  /api/v1/loginlog:
    post:
      consumes:
      - application/json
      description: get JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LoginLog'
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: add login log
      tags:
      - login log
    put:
      consumes:
      - application/json
      description: get JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LoginLog'
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: modify login log
      tags:
      - login log
  /api/v1/loginlog/{infoId}:
    delete:
      description: delete data
      parameters:
      - description: infoId separated by comma (,)
        in: path
        name: infoId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "Deletion failed"}'
          schema:
            type: string
      summary: delete login logs in batch
      tags:
      - login log
    get:
      description: get JSON
      parameters:
      - description: infoId
        in: path
        name: infoId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: gets the login log by coding
      tags:
      - login log
  /api/v1/loginloglist:
    get:
      description: get JSON
      parameters:
      - description: status
        in: query
        name: status
        type: string
      - description: dictCode
        in: query
        name: dictCode
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: Number of pages
        in: query
        name: pageSize
        type: integer
      - description: page number
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: login log list
      tags:
      - login log
  /api/v1/menu:
    get:
      description: get JSON
      parameters:
      - description: menuName
        in: query
        name: menuName
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "Sorry no relevant information was
            found"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: Menu list data
      tags:
      - menu
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: get JSON
      parameters:
      - description: menuName
        in: formData
        name: menuName
        required: true
        type: string
      - description: Path
        in: formData
        name: Path
        type: string
      - description: Action
        in: formData
        name: Action
        required: true
        type: string
      - description: Permission
        in: formData
        name: Permission
        required: true
        type: string
      - description: ParentId
        in: formData
        name: ParentId
        required: true
        type: string
      - description: IsDel
        in: formData
        name: IsDel
        required: true
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: create menu
      tags:
      - menu
  /api/v1/menu/{id}:
    delete:
      description: delete data
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "Deletion failed"}'
          schema:
            type: string
      summary: delete menu
      tags:
      - menu
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: get JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Menu'
      responses:
        "200":
          description: '{"code": -1, "message": "Modification failed"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: modify the menu
      tags:
      - menu
  /api/v1/menuTreeselect:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: get JSON
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: get the menu tree
      tags:
      - menu
  /api/v1/menuids/{id}:
    get:
      description: get JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "Sorry no relevant information was
            found"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: gets the menu id array corresponding to the role
      tags:
      - menu
  /api/v1/menulist:
    get:
      description: get JSON
      parameters:
      - description: menuName
        in: query
        name: menuName
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "Sorry no relevant information was
            found"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: Menu list data
      tags:
      - menu
  /api/v1/menurole:
    get:
      description: get JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "Sorry no relevant information was
            found"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: gets menu list data based on the role name (used in the left menu)
      tags:
      - menu
  /api/v1/operlog:
    post:
      consumes:
      - application/json
      description: get JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysOperLog'
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: add operation log
      tags:
      - operation log
  /api/v1/operlog/{infoId}:
    get:
      description: get JSON
      parameters:
      - description: infoId
        in: path
        name: infoId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: gets the login log by coding
      tags:
      - login log
  /api/v1/operlog/{operId}:
    delete:
      description: delete data
      parameters:
      - description: operId separated by comma (,)
        in: path
        name: operId
        required: true
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "Deletion failed"}'
          schema:
            type: string
      summary: bulk delete operation logs
      tags:
      - operation log
  /api/v1/operloglist:
    get:
      description: get JSON
      parameters:
      - description: status
        in: query
        name: status
        type: string
      - description: dictCode
        in: query
        name: dictCode
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: Number of pages
        in: query
        name: pageSize
        type: integer
      - description: page number
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: login log list
      tags:
      - login log
  /api/v1/post:
    get:
      description: get JSON
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: id
        in: query
        name: id
        type: string
      - description: position
        in: query
        name: position
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: job listing data
      tags:
      - position
    post:
      consumes:
      - application/json
      description: get JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: add job
      tags:
      - position
  /api/v1/post/:
    put:
      consumes:
      - application/json
      description: get JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Dept'
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: modify position
      tags:
      - position
  /api/v1/post/{postId}:
    delete:
      description: delete data
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "Deletion failed"}'
          schema:
            type: string
      summary: delete job
      tags:
      - position
    get:
      description: get JSON
      parameters:
      - description: postId
        in: path
        name: postId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: get dictionary data
      tags:
      - dictionary data
  /api/v1/role:
    get:
      description: get JSON
      parameters:
      - description: roleId
        in: path
        name: roleId
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "Sorry no relevant information was
            found"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: get Role data
      tags:
      - role/Role
    post:
      consumes:
      - application/json
      description: get JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysRole'
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      summary: creates a character
      tags:
      - role/Role
    put:
      consumes:
      - application/json
      description: get JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysRole'
      responses:
        "200":
          description: '{"code": -1, "message": "Modification failed"}'
          schema:
            type: string
      summary: modify user role
      tags:
      - role/Role
  /api/v1/role/{roleId}:
    delete:
      description: delete data
      parameters:
      - description: roleId
        in: path
        name: roleId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "Deletion failed"}'
          schema:
            type: string
      summary: delete user role
      tags:
      - role/Role
  /api/v1/rolelist:
    get:
      description: Get JSON
      parameters:
      - description: roleName
        in: query
        name: roleName
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: roleKey
        in: query
        name: roleKey
        type: string
      - description: Number of pages
        in: query
        name: pageSize
        type: integer
      - description: page number
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: role list data
      tags:
      - role/Role
  /api/v1/rolemenu:
    get:
      description: get JSON
      parameters:
      - description: RoleId
        in: query
        name: RoleId
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "Sorry no relevant information was
            found"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: RoleMenu list data
      tags:
      - character menu
  /api/v1/rolemenu/{id}:
    delete:
      description: delete data
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: menu_id
        in: query
        name: menu_id
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "Deletion failed"}'
          schema:
            type: string
      summary: delete user menu data
      tags:
      - character menu
  /api/v1/sys/tables/info:
    post:
      consumes:
      - application/json
      description: add table structure
      parameters:
      - description: tableName / data table name
        in: query
        name: tables
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: add table structure
      tags:
      - tool-generate table
    put:
      consumes:
      - application/json
      description: modify the table structure
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.Dept'
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: modify the table structure
      tags:
      - tool-generate table
  /api/v1/sys/tables/info/{tableId}:
    delete:
      description: delete table structure
      parameters:
      - description: tableId
        in: path
        name: tableId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "Deletion failed"}'
          schema:
            type: string
      summary: delete the table structure
      tags:
      - tool-generate table
    get:
      description: get JSON
      parameters:
      - description: configKey
        in: path
        name: configKey
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: get configuration
      tags:
      - tool-generate table
  /api/v1/sys/tables/page:
    get:
      description: generates a table pagination list
      parameters:
      - description: tableName / data table name
        in: query
        name: tableName
        type: string
      - description: pageSize / number of pages
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / page number
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      summary: paging list data
      tags:
      - tool-generate table
  /api/v1/sysUser:
    get:
      description: get JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: Get user roles and positions
      tags:
      - user
    post:
      consumes:
      - application/json
      description: get JSON
      parameters:
      - description: user data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysUser'
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      summary: create user
      tags:
      - user
  /api/v1/sysUser/{userId}:
    get:
      description: get JSON
      parameters:
      - description: user code
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: get user
      tags:
      - user
  /api/v1/sysUserList:
    get:
      description: get JSON
      parameters:
      - description: username
        in: query
        name: username
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "Sorry no relevant information was
            found"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: list data
      tags:
      - 用户
  /api/v1/sysuser/{userId}:
    delete:
      description: delete data
      parameters:
      - description: userId
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "Deletion failed"}'
          schema:
            type: string
      summary: delete user data
      tags:
      - user
    put:
      consumes:
      - application/json
      description: get JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.SysUser'
      responses:
        "200":
          description: '{"code": -1, "message": "Modification failed"}'
          schema:
            type: string
      summary: modify user data
      tags:
      - user
  /api/v1/user/profile:
    get:
      description: get JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - "": []
      summary: gets the currently logged in user
      tags:
      - Personal Center
  /api/v1/user/profileAvatar:
    post:
      consumes:
      - multipart/form-data
      description: get JSON
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: '{"code": -1, "message": "Add failed"}'
          schema:
            type: string
      summary: modify avatar
      tags:
      - user
  /login:
    post:
      consumes:
      - application/json
      description: get token
      parameters:
      - description: Add account
        in: body
        name: username
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      responses:
        "200":
          description: '{"code": 200, "expire": "2019-08-07T12:45:48+08:00", "token":
            ".eyJleHAiOjE1NjUxNTMxNDgsImlkIjoiYWRtaW4iLCJvcmlnX2lhdCI6MTU2NTE0OTU0OH0.-zvzHvbg0A"
            }'
          schema:
            type: string
      summary: login
  /logout:
    post:
      consumes:
      - application/json
      description: 获取token
      responses:
        "200":
          description: '{"code": 200, "msg": "成功退出系统" }'
          schema:
            type: string
      security:
      - "": []
      summary: 退出登录
  /sd/cpu:
    get:
      consumes:
      - text/html
      description: CPU 使用量 DiskCheck checks the disk usage.
      produces:
      - text/html
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: CPU 使用量
  /sd/disk:
    get:
      consumes:
      - text/html
      description: 服务器硬盘使用量 DiskCheck checks the disk usage.
      produces:
      - text/html
      responses:
        "200":
          description: 'OK - Free space: 16321MB (15GB) / 51200MB (50GB) | Used: 31%'
          schema:
            type: string
        "429":
          description: WARNING
          schema:
            type: string
        "500":
          description: CRITICAL
          schema:
            type: string
      summary: 服务器硬盘使用量
  /sd/health:
    get:
      consumes:
      - text/html
      description: 健康状况
      produces:
      - text/html
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 健康状况 HealthCheck shows OK as the ping-pong result.
  /sd/os:
    get:
      consumes:
      - text/html
      description: Os
      produces:
      - text/html
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: OS
  /sd/ram:
    get:
      consumes:
      - text/html
      description: 内存使用量 RAMCheck checks the disk usage.
      produces:
      - text/html
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 内存使用量
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
